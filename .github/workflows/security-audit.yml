# Security Audit Workflow
# Comprehensive security scanning using multiple tools for PCI compliance and security monitoring

name: "Security Audit"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit semgrep

    - name: Python Dependency Vulnerability Scan (Safety)
      run: |
        echo "Running Safety scan for Python dependencies..."
        safety check --json --output safety-report.json || true
        safety check --short-report || echo "Safety scan completed with findings"

    - name: Python Code Security Analysis (Bandit)
      run: |
        echo "Running Bandit security analysis..."
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt || echo "Bandit scan completed"

    - name: Advanced Static Analysis (Semgrep)
      run: |
        echo "Running Semgrep static analysis..."
        semgrep --config=auto --json --output=semgrep-report.json . || true
        semgrep --config=auto . || echo "Semgrep scan completed"

    - name: PCI Compliance Check
      run: |
        echo "Running PCI DSS compliance verification..."
        cd /home/runner/work/ireti-pos-light-ce/ireti-pos-light-ce
        python scripts/pci_compliance_check.py || echo "PCI compliance check completed with findings"

    - name: Upload Security Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json
        retention-days: 30

    - name: Upload Bandit SARIF results to GitHub
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: bandit-report.json
      continue-on-error: true

    - name: Security Summary
      if: always()
      run: |
        echo "=== SECURITY AUDIT SUMMARY ==="
        echo "‚úÖ Python dependency scan (Safety) - completed"
        echo "‚úÖ Python code security analysis (Bandit) - completed"
        echo "‚úÖ Static analysis (Semgrep) - completed"
        echo "‚úÖ PCI compliance verification - completed"
        echo ""
        echo "üìä Reports uploaded as artifacts for detailed review"
        echo "üîç Check the Security tab for detailed findings"