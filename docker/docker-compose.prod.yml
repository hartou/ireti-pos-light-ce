# Ireti POS Light - Production Docker Compose

version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iretiposlightdb}
      POSTGRES_USER: ${POSTGRES_USER:-iretiposlightuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-iretiposlightuser}"]
      interval: 30s
      timeout: 10s
      retries: 3

  webapp:
    image: ghcr.io/${GITHUB_REPOSITORY:-hartou/ireti-pos-light}:latest
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=onlineretailpos.settings.production
      - DATABASE_URL=postgres://${POSTGRES_USER:-iretiposlightuser}:${POSTGRES_PASSWORD:-securepassword123}@db:5432/${POSTGRES_DB:-iretiposlightdb}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your-secret-key-here}
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-Admin123!}
      # Stripe Payment Configuration
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_ENDPOINT_SECRET=${STRIPE_WEBHOOK_ENDPOINT_SECRET}
      - STRIPE_CURRENCY=${STRIPE_CURRENCY:-USD}
      - STRIPE_MINIMUM_CHARGE=${STRIPE_MINIMUM_CHARGE:-50}
      - STRIPE_REFUND_DAYS_LIMIT=${STRIPE_REFUND_DAYS_LIMIT:-120}
      - STRIPE_PAYMENT_TIMEOUT=${STRIPE_PAYMENT_TIMEOUT:-300}
      - STRIPE_AUTO_CAPTURE=${STRIPE_AUTO_CAPTURE:-true}
      - STRIPE_WEBHOOK_TIMEOUT=${STRIPE_WEBHOOK_TIMEOUT:-10}
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/usr/share/nginx/html/static:ro
      - media_files:/usr/share/nginx/html/media:ro
    depends_on:
      - webapp
    restart: unless-stopped

volumes:
  postgres_data:
  static_files:
  media_files:
